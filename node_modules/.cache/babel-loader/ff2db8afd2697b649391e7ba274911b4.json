{"remainingRequest":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignInForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignInForm.vue","mtime":1530400302858},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'sign-in-form',\n  data: function data() {\n    return {\n      form: {\n        auth_url: null,\n        profile_func_url: null,\n        picture_func_url: null,\n        email: null,\n        city: null,\n        password: null\n      },\n      rules: {\n        auth_url: [{\n          required: true,\n          message: 'Please enter your auth url',\n          trigger: 'blur'\n        }],\n        profile_func_url: [{\n          required: true,\n          message: 'Please enter your profile function url',\n          trigger: 'blur'\n        }],\n        picture_func_url: [{\n          required: true,\n          message: 'Please enter your picture function url',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please enter your email',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter your password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    if (localStorage.getItem('auth_url')) {\n      this.form.auth_url = localStorage.getItem('auth_url');\n    }\n\n    if (localStorage.getItem('profile_func_url')) {\n      this.form.profile_func_url = localStorage.getItem('profile_func_url');\n    }\n\n    if (localStorage.getItem('picture_func_url')) {\n      this.form.picture_func_url = localStorage.getItem('picture_func_url');\n    }\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$refs['signInForm'].validate(function (valid) {\n        if (valid) {\n          localStorage.setItem('auth_url', _this.form.auth_url);\n          localStorage.setItem('func_url', _this.form.func_url);\n\n          _this.axios.post(_this.form.auth_url + '?action=signin&userid=' + _this.form.email + '&password=' + _this.form.password, {// action: 'signup',\n            // userid: this.form.email,\n            // password: this.form.password,\n            // city: this.form.city\n          }).then(function (response) {\n            if ('error' in response.data) {\n              _this.$notify.error({\n                title: 'Error',\n                message: response.data.error\n              });\n            } else {\n              _this.$notify.success({\n                title: 'Success',\n                message: 'SignIn successful'\n              });\n\n              localStorage.setItem('token', response.data.token);\n\n              _this.$router.push({\n                name: 'profile'\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["SignInForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,QAAA,cADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,YAAA;AACA,kBAAA,IADA;AAEA,0BAAA,IAFA;AAGA,0BAAA,IAHA;AAIA,eAAA,IAJA;AAKA,cAAA,IALA;AAMA,kBAAA;AANA,OADA;AASA,aAAA;AACA,kBAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,4BAAA;AAAA,mBAAA;AAAA,SADA,CADA;AAIA,0BAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,wCAAA;AAAA,mBAAA;AAAA,SADA,CAJA;AAOA,0BAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,wCAAA;AAAA,mBAAA;AAAA,SADA,CAPA;AAUA,eAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,yBAAA;AAAA,mBAAA;AAAA,SADA,EAEA;AAAA,gBAAA,OAAA;AAAA,mBAAA,oCAAA;AAAA,mBAAA;AAAA,SAFA,CAVA;AAcA,kBAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,4BAAA;AAAA,mBAAA;AAAA,SADA;AAdA;AATA,KAAA;AA4BA,GA/BA;AAiCA,SAjCA,qBAiCA;AACA,QAAA,aAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,aAAA,OAAA,CAAA,UAAA,CAAA;AACA;;AAEA,QAAA,aAAA,OAAA,CAAA,kBAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,gBAAA,GAAA,aAAA,OAAA,CAAA,kBAAA,CAAA;AACA;;AAEA,QAAA,aAAA,OAAA,CAAA,kBAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,gBAAA,GAAA,aAAA,OAAA,CAAA,kBAAA,CAAA;AACA;AACA,GA7CA;AA+CA,WAAA;AACA,cADA,wBACA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,QAAA,CAAA,iBAAA;AACA,YAAA,KAAA,EAAA;AACA,uBAAA,OAAA,CAAA,UAAA,EAAA,MAAA,IAAA,CAAA,QAAA;AACA,uBAAA,OAAA,CAAA,UAAA,EAAA,MAAA,IAAA,CAAA,QAAA;;AAEA,gBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,IAAA,CAAA,QAAA,GAAA,wBAAA,GAAA,MAAA,IAAA,CAAA,KAAA,GAAA,YAAA,GAAA,MAAA,IAAA,CAAA,QAAA,EAAA,CACA;AACA;AACA;AACA;AAJA,WAAA,EAKA,IALA,CAKA,oBAAA;AACA,gBAAA,WAAA,SAAA,IAAA,EAAA;AACA,oBAAA,OAAA,CAAA,KAAA,CAAA;AACA,uBAAA,OADA;AAEA,yBAAA,SAAA,IAAA,CAAA;AAFA,eAAA;AAIA,aALA,MAKA;AACA,oBAAA,OAAA,CAAA,OAAA,CAAA;AACA,uBAAA,SADA;AAEA,yBAAA;AAFA,eAAA;;AAKA,2BAAA,OAAA,CAAA,OAAA,EAAA,SAAA,IAAA,CAAA,KAAA;;AACA,oBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,sBAAA;AAAA,eAAA;AACA;AACA,WApBA;AAqBA;AACA,OA3BA;AA4BA;AA9BA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"sign-in\">\n    <el-form label-width=\"170px\" label-position=\"left\" ref=\"signInForm\" :model=\"form\" :rules=\"rules\" @submit.native.prevent=\"submitForm()\">\n      <el-form-item label=\"Auth URL\" prop=\"auth_url\">\n        <el-input placeholder=\"Auth function URL\" type=\"text\" v-model=\"form.auth_url\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Profile Function URL\" prop=\"profile_func_url\">\n        <el-input placeholder=\"Profile management URL\" type=\"text\" v-model=\"form.profile_func_url\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Picture Function URL\" prop=\"picture_func_url\">\n        <el-input placeholder=\"Picture management URL\" type=\"text\" v-model=\"form.picture_func_url\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Your email\" prop=\"email\">\n        <el-input placeholder=\"Email\" type=\"email\" v-model=\"form.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Password\" prop=\"password\">\n        <el-input placeholder=\"Password\" type=\"password\" v-model=\"form.password\"></el-input>\n      </el-form-item>\n      \n      <div class=\"sw-form-actions\">\n        <button type=\"submit\" style=\"display: none\"></button>\n        <el-button type=\"primary\" @click=\"submitForm\">Sign In</el-button>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'sign-in-form',\n  data () {\n    return {\n      form: {\n        auth_url: null,\n        profile_func_url: null,\n        picture_func_url: null,\n        email: null,\n        city: null,\n        password: null\n      },\n      rules: {\n        auth_url: [\n          { required: true, message: 'Please enter your auth url', trigger: 'blur' }\n        ],\n        profile_func_url: [\n          { required: true, message: 'Please enter your profile function url', trigger: 'blur' }\n        ],\n        picture_func_url: [\n          { required: true, message: 'Please enter your picture function url', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: 'Please enter your email', trigger: 'blur' },\n          { type: 'email', message: 'Please input correct email address', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: 'Please enter your password', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n  created () {\n    if (localStorage.getItem('auth_url')) {\n      this.form.auth_url = localStorage.getItem('auth_url')\n    }\n\n    if (localStorage.getItem('profile_func_url')) {\n      this.form.profile_func_url = localStorage.getItem('profile_func_url')\n    }\n\n    if (localStorage.getItem('picture_func_url')) {\n      this.form.picture_func_url = localStorage.getItem('picture_func_url')\n    }\n  },\n\n  methods: {\n    submitForm () {\n      this.$refs['signInForm'].validate(valid => {\n        if (valid) {\n          localStorage.setItem('auth_url', this.form.auth_url)\n          localStorage.setItem('func_url', this.form.func_url)\n\n          this.axios.post(this.form.auth_url + '?action=signin&userid=' + this.form.email + '&password=' + this.form.password, {\n            // action: 'signup',\n            // userid: this.form.email,\n            // password: this.form.password,\n            // city: this.form.city\n          }).then(response => {\n            if ('error' in response.data) {\n              this.$notify.error({\n                title: 'Error',\n                message: response.data.error\n              });\n            } else {\n              this.$notify.success({\n                title: 'Success',\n                message: 'SignIn successful'\n              })\n\n              localStorage.setItem('token', response.data.token)\n              this.$router.push({ name: 'profile' })\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components"}]}