{"remainingRequest":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignUpForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignUpForm.vue","mtime":1531779827199},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/plugins/api';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        auth_endpoint: null,\n        profile_endpoint: null,\n        picture_endpoint: null,\n        email: null,\n        city: null,\n        password: null\n      },\n      rules: {\n        auth_endpoint: [{\n          required: true,\n          message: 'Please enter your auth url',\n          trigger: 'blur'\n        }],\n        profile_endpoint: [{\n          required: true,\n          message: 'Please enter your profile function url',\n          trigger: 'blur'\n        }],\n        picture_endpoint: [{\n          required: true,\n          message: 'Please enter your picture function url',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please enter your email',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter your password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    auth_endpoint: {\n      get: function get() {\n        return this.$store.state.auth_endpoint;\n      },\n      set: function set(value) {\n        this.form.auth_endpoint = value;\n        this.$store.commit('updateAuthEndpoint', value);\n      }\n    },\n    profile_endpoint: {\n      get: function get() {\n        return this.$store.state.profile_endpoint;\n      },\n      set: function set(value) {\n        this.form.profile_endpoint = value;\n        this.$store.commit('updateProfileEndpoint', value);\n      }\n    },\n    picture_endpoint: {\n      get: function get() {\n        return this.$store.state.picture_endpoint;\n      },\n      set: function set(value) {\n        this.form.picture_endpoint = value;\n        this.$store.commit('updatePictureEndpoint', value);\n      }\n    }\n  },\n  created: function created() {\n    this.form.auth_endpoint = this.auth_endpoint;\n    this.form.profile_endpoint = this.profile_endpoint;\n    this.form.picture_endpoint = this.picture_endpoint;\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$refs['signUpForm'].validate(function (valid) {\n        if (valid) {\n          _this.$store.dispatch('signUp', _this.form).then(function () {\n            return _this.$store.dispatch('signIn', _this.form);\n          }).then(function (response) {\n            if ('error' in response.data) {\n              _this.$notify.error({\n                title: 'SignIn Error',\n                message: response.data.error\n              });\n\n              return Promise.reject();\n            } else {\n              _this.$store.commit('updateToken', response.data.token);\n\n              return _this.$store.dispatch('createProfile', {\n                email: _this.form.email,\n                city: _this.form.city\n              });\n            }\n          }).then(function (response) {\n            _this.$router.push({\n              name: 'profile'\n            });\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["SignUpForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"sign-up\">\n    <el-form label-width=\"170px\" label-position=\"left\" ref=\"signUpForm\" :model=\"form\" :rules=\"rules\" @submit.native.prevent=\"submitForm()\">\n      <el-form-item label=\"Auth URL\" prop=\"auth_endpoint\">\n        <el-input placeholder=\"Auth function URL\" type=\"text\" v-model=\"auth_endpoint\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Profile Function URL\" prop=\"profile_endpoint\">\n        <el-input placeholder=\"Profile management URL\" type=\"text\" v-model=\"profile_endpoint\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Picture Function URL\" prop=\"picture_endpoint\">\n        <el-input placeholder=\"Picture management URL\" type=\"text\" v-model=\"picture_endpoint\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Your email\" prop=\"email\">\n        <el-input placeholder=\"Email\" type=\"email\" v-model=\"form.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"City\" prop=\"city\">\n        <el-input placeholder=\"City\" type=\"text\" v-model=\"form.city\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Password\" prop=\"password\">\n        <el-input placeholder=\"Password\" type=\"password\" v-model=\"form.password\"></el-input>\n      </el-form-item>\n      \n      <div class=\"sw-form-actions\">\n        <button type=\"submit\" style=\"display: none\"></button>\n        <el-button type=\"primary\" @click=\"submitForm\">Sign Up</el-button>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport api from '@/plugins/api'\n\nexport default {\n  data () {\n    return {\n      form: {\n        auth_endpoint: null,\n        profile_endpoint: null,\n        picture_endpoint: null,\n        email: null,\n        city: null,\n        password: null\n      },\n\n      rules: {\n        auth_endpoint: [\n          { required: true, message: 'Please enter your auth url', trigger: 'blur' }\n        ],\n        profile_endpoint: [\n          { required: true, message: 'Please enter your profile function url', trigger: 'blur' }\n        ],\n        picture_endpoint: [\n          { required: true, message: 'Please enter your picture function url', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: 'Please enter your email', trigger: 'blur' },\n          { type: 'email', message: 'Please input correct email address', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: 'Please enter your password', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n  computed: {\n    auth_endpoint: {\n      get () {\n        return this.$store.state.auth_endpoint\n      },\n      set (value) {\n        this.form.auth_endpoint = value\n        this.$store.commit('updateAuthEndpoint', value)\n      }\n    },\n\n    profile_endpoint: {\n      get () {\n        return this.$store.state.profile_endpoint\n      },\n      set (value) {\n        this.form.profile_endpoint = value\n        this.$store.commit('updateProfileEndpoint', value)\n      }\n    },\n\n    picture_endpoint: {\n      get () {\n        return this.$store.state.picture_endpoint\n      },\n      set (value) {\n        this.form.picture_endpoint = value\n        this.$store.commit('updatePictureEndpoint', value)\n      }\n    }\n  },\n\n  created () {\n    this.form.auth_endpoint = this.auth_endpoint\n    this.form.profile_endpoint = this.profile_endpoint\n    this.form.picture_endpoint = this.picture_endpoint\n  },\n\n  methods: {\n    submitForm () {\n      this.$refs['signUpForm'].validate(valid => {\n        if (valid) {\n          this.$store.dispatch('signUp', this.form).then(() => {\n            return this.$store.dispatch('signIn', this.form)\n          }).then(response => {\n            if ('error' in response.data) {\n              this.$notify.error({\n                title: 'SignIn Error',\n                message: response.data.error\n              });\n\n              return Promise.reject()\n            } else {\n              this.$store.commit('updateToken', response.data.token)\n              return this.$store.dispatch('createProfile', {\n                email: this.form.email,\n                city: this.form.city\n              })\n            }\n          }).then(response => {\n            this.$router.push({ name: 'profile' })\n          })\n        }\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components"}]}