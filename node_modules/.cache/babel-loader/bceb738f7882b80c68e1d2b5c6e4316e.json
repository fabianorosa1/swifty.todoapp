{"remainingRequest":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/ProfileForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/ProfileForm.vue","mtime":1530400302857},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      form: {\n        email: null,\n        city: null,\n        auth_url: null,\n        func_url: null,\n        user_image: null\n      },\n      token: null,\n      func: null\n    };\n  },\n  created: function created() {\n    if (localStorage.getItem('auth_url')) {\n      this.form.auth_url = localStorage.getItem('auth_url');\n    }\n\n    if (localStorage.getItem('profile_func_url')) {\n      this.form.profile_func_url = localStorage.getItem('profile_func_url');\n    }\n\n    if (localStorage.getItem('picture_func_url')) {\n      this.form.picture_func_url = localStorage.getItem('picture_func_url');\n    }\n\n    if (localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n    }\n\n    this.fetchUserInfo();\n  },\n  methods: {\n    fetchUserInfo: function fetchUserInfo() {\n      return this.axios.request({\n        url: this.form.profile_func_url + '?action=get',\n        headers: {\n          'Authorization': 'Bearer ' + this.token\n        }\n      }).then(function (response) {\n        console.log(response);\n      });\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      this.form.user_image = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('Avatar picture must be JPG format!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('Avatar picture size can not exceed 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    }\n  }\n};",{"version":3,"sources":["ProfileForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA;AACA,eAAA,IADA;AAEA,cAAA,IAFA;AAGA,kBAAA,IAHA;AAIA,kBAAA,IAJA;AAKA,oBAAA;AALA,OADA;AASA,aAAA,IATA;AAUA,YAAA;AAVA,KAAA;AAYA,GAdA;AAgBA,SAhBA,qBAgBA;AACA,QAAA,aAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,aAAA,OAAA,CAAA,UAAA,CAAA;AACA;;AAEA,QAAA,aAAA,OAAA,CAAA,kBAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,gBAAA,GAAA,aAAA,OAAA,CAAA,kBAAA,CAAA;AACA;;AAEA,QAAA,aAAA,OAAA,CAAA,kBAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,gBAAA,GAAA,aAAA,OAAA,CAAA,kBAAA,CAAA;AACA;;AAEA,QAAA,aAAA,OAAA,CAAA,OAAA,CAAA,EAAA;AACA,WAAA,KAAA,GAAA,aAAA,OAAA,CAAA,OAAA,CAAA;AACA;;AAEA,SAAA,aAAA;AACA,GAlCA;AAoCA,WAAA;AACA,iBADA,2BACA;AACA,aAAA,KAAA,KAAA,CAAA,OAAA,CAAA;AACA,aAAA,KAAA,IAAA,CAAA,gBAAA,GAAA,aADA;AAEA,iBAAA;AAAA,2BAAA,YAAA,KAAA;AAAA;AAFA,OAAA,EAGA,IAHA,CAGA,oBAAA;AACA,gBAAA,GAAA,CAAA,QAAA;AACA,OALA,CAAA;AAMA,KARA;AAUA,uBAVA,+BAUA,GAVA,EAUA,IAVA,EAUA;AACA,WAAA,IAAA,CAAA,UAAA,GAAA,IAAA,eAAA,CAAA,KAAA,GAAA,CAAA;AACA,KAZA;AAcA,sBAdA,8BAcA,IAdA,EAcA;AACA,UAAA,QAAA,KAAA,IAAA,KAAA,YAAA;AACA,UAAA,SAAA,KAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,oCAAA;AACA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,yCAAA;AACA;;AACA,aAAA,SAAA,MAAA;AACA;AAzBA;AApCA,CAAA","sourcesContent":["<template>\n  <el-form label-width=\"170px\" label-position=\"left\" ref=\"signUpForm\" :model=\"form\">\n    <el-form-item label=\"User email\">\n      <el-input placeholder=\"Email\" type=\"text\" v-model=\"form.email\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"City\">\n      <el-input placeholder=\"City\" type=\"text\" v-model=\"form.city\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"Auth URL\">\n      <el-input placeholder=\"Auth function URL\" type=\"text\" v-model=\"form.auth_url\" disabled></el-input>\n    </el-form-item>\n    <el-form-item label=\"Profile Function URL\">\n      <el-input placeholder=\"Profile management URL\" type=\"text\" v-model=\"form.profile_func_url\" disabled></el-input>\n    </el-form-item>\n    <el-form-item label=\"Picture Function URL\">\n      <el-input placeholder=\"Picture management URL\" type=\"text\" v-model=\"form.picture_func_url\" disabled></el-input>\n    </el-form-item>\n    <el-form-item label=\"Picture\">\n      <el-upload\n        class=\"avatar-uploader\"\n        action=\"https://jsonplaceholder.typicode.com/posts/\"\n        :show-file-list=\"false\"\n        :on-success=\"handleAvatarSuccess\"\n        :before-upload=\"beforeAvatarUpload\">\n        <img v-if=\"form.user_image\" :src=\"form.user_image\" class=\"avatar\">\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n      </el-upload>\n    </el-form-item>\n    \n    <div class=\"sw-form-actions\">\n      <button type=\"submit\" style=\"display: none\"></button>\n      <el-button type=\"primary\">Update profile</el-button>\n    </div>\n  </el-form>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      form: {\n        email: null,\n        city: null,\n        auth_url: null,\n        func_url: null,\n        user_image: null\n      },\n\n      token: null,\n      func: null\n    }\n  },\n\n  created () {\n    if (localStorage.getItem('auth_url')) {\n      this.form.auth_url = localStorage.getItem('auth_url')\n    }\n\n    if (localStorage.getItem('profile_func_url')) {\n      this.form.profile_func_url = localStorage.getItem('profile_func_url')\n    }\n\n    if (localStorage.getItem('picture_func_url')) {\n      this.form.picture_func_url = localStorage.getItem('picture_func_url')\n    }\n\n    if (localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token')\n    }\n\n    this.fetchUserInfo()\n  },\n\n  methods: {\n    fetchUserInfo () {\n      return this.axios.request({\n        url: this.form.profile_func_url + '?action=get',\n        headers: { 'Authorization': 'Bearer ' + this.token }\n      }).then(response => {\n        console.log(response)\n      })\n    },\n\n    handleAvatarSuccess(res, file) {\n      this.form.user_image = URL.createObjectURL(file.raw);\n    },\n\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('Avatar picture must be JPG format!');\n      }\n      if (!isLt2M) {\n        this.$message.error('Avatar picture size can not exceed 2MB!');\n      }\n      return isJPG && isLt2M;\n    }\n  }\n}\n</script>\n\n<style>\n.header {\n  font-size: 16px;\n  font-weight: normal;\n  text-transform: uppercase;\n  color: #1989fa;\n  border-bottom: 1px solid #e4e7ed;\n  padding-bottom: 15px;\n  margin-top: 30px;\n}\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 136px;\n  height: 136px;\n  line-height: 136px;\n  text-align: center;\n}\n.avatar {\n  width: 136px;\n  height: 136px;\n  display: block;\n}\n</style>"],"sourceRoot":"src/components"}]}