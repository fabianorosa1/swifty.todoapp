{"remainingRequest":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignUpForm.vue?vue&type=template&id=2cb23e4c","dependencies":[{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/components/SignUpForm.vue","mtime":1536413589398},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1526010763000},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sign-up\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"signUpForm\",\n          attrs: {\n            \"label-width\": \"170px\",\n            \"label-position\": \"left\",\n            model: _vm.form,\n            rules: _vm.rules\n          },\n          nativeOn: {\n            submit: function($event) {\n              $event.preventDefault()\n              _vm.submitForm()\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Auth URL\", prop: \"auth_endpoint\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Auth function URL\", type: \"text\" },\n                model: {\n                  value: _vm.auth_endpoint,\n                  callback: function($$v) {\n                    _vm.auth_endpoint = $$v\n                  },\n                  expression: \"auth_endpoint\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: { label: \"Facebook Auth URL\", prop: \"facebook_endpoint\" }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Facebook function URL\", type: \"text\" },\n                model: {\n                  value: _vm.facebook_endpoint,\n                  callback: function($$v) {\n                    _vm.facebook_endpoint = $$v\n                  },\n                  expression: \"facebook_endpoint\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: { label: \"Profile Function URL\", prop: \"profile_endpoint\" }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Profile management URL\", type: \"text\" },\n                model: {\n                  value: _vm.profile_endpoint,\n                  callback: function($$v) {\n                    _vm.profile_endpoint = $$v\n                  },\n                  expression: \"profile_endpoint\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: { label: \"Picture Function URL\", prop: \"picture_endpoint\" }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Picture management URL\", type: \"text\" },\n                model: {\n                  value: _vm.picture_endpoint,\n                  callback: function($$v) {\n                    _vm.picture_endpoint = $$v\n                  },\n                  expression: \"picture_endpoint\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Tasks Function URL\", prop: \"tasks_endpoint\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Tasks management URL\", type: \"text\" },\n                model: {\n                  value: _vm.tasks_endpoint,\n                  callback: function($$v) {\n                    _vm.tasks_endpoint = $$v\n                  },\n                  expression: \"tasks_endpoint\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"sw-form-actions sw-form-actions--facebook\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", plain: \"\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.signUpWithFacebook($event)\n                    }\n                  }\n                },\n                [_vm._v(\"Sign Up With Facebook\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Your email\", prop: \"email\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Email\", type: \"email\" },\n                model: {\n                  value: _vm.form.email,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"email\", $$v)\n                  },\n                  expression: \"form.email\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"City\", prop: \"city\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"City\", type: \"text\" },\n                model: {\n                  value: _vm.form.city,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"city\", $$v)\n                  },\n                  expression: \"form.city\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Password\", prop: \"password\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"Password\", type: \"password\" },\n                model: {\n                  value: _vm.form.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"password\", $$v)\n                  },\n                  expression: \"form.password\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"sw-form-actions\" },\n            [\n              _c(\"button\", {\n                staticStyle: { display: \"none\" },\n                attrs: { type: \"submit\" }\n              }),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.submitForm } },\n                [_vm._v(\"Sign Up\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}