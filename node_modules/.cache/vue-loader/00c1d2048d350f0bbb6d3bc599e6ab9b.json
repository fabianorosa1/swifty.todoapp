{"remainingRequest":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/views/Tasks.vue?vue&type=template&id=5f49cac4","dependencies":[{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/src/views/Tasks.vue","mtime":1533823950277},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1526010763000},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vporokhov/Desktop/SwiftyCloud/swifty.demo/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"tasks\" },\n    [\n      _c(\n        \"el-row\",\n        [\n          _c(\n            \"el-col\",\n            [\n              _c(\n                \"el-tabs\",\n                {\n                  model: {\n                    value: _vm.activeTabName,\n                    callback: function($$v) {\n                      _vm.activeTabName = $$v\n                    },\n                    expression: \"activeTabName\"\n                  }\n                },\n                [\n                  _c(\"el-tab-pane\", {\n                    attrs: { label: \"TASKS\", name: \"tasks\" }\n                  }),\n                  _c(\"el-tab-pane\", {\n                    attrs: { label: \"PROFILE\", name: \"profile\" }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-row\",\n        [\n          _c(\"el-col\", { attrs: { lg: 10 } }, [\n            _c(\n              \"div\",\n              { staticClass: \"tasks-filter\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    class: { active: _vm.filter === \"all\" },\n                    attrs: { size: \"mini\" },\n                    on: {\n                      click: function($event) {\n                        _vm.filter = \"all\"\n                      }\n                    }\n                  },\n                  [_vm._v(\"All\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    class: { active: _vm.filter === \"done\" },\n                    attrs: { size: \"mini\" },\n                    on: {\n                      click: function($event) {\n                        _vm.filter = \"done\"\n                      }\n                    }\n                  },\n                  [_vm._v(\"Completed\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    class: { active: _vm.filter === \"new\" },\n                    attrs: { size: \"mini\" },\n                    on: {\n                      click: function($event) {\n                        _vm.filter = \"new\"\n                      }\n                    }\n                  },\n                  [_vm._v(\"Active\")]\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"tasks-form\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.task,\n                    expression: \"task\"\n                  }\n                ],\n                staticClass: \"tasks-input\",\n                attrs: { type: \"text\", placeholder: \"Enter your task here\" },\n                domProps: { value: _vm.task },\n                on: {\n                  keyup: function($event) {\n                    if (\n                      !(\"button\" in $event) &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.addTask($event)\n                  },\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.task = $event.target.value\n                  }\n                }\n              }),\n              _c(\n                \"a\",\n                {\n                  staticClass: \"tasks-button\",\n                  attrs: { href: \"#\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      $event.stopPropagation()\n                      return _vm.addTask($event)\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"el-icon-circle-plus-outline\" })]\n              )\n            ]),\n            _vm.tasks.length\n              ? _c(\n                  \"ul\",\n                  { staticClass: \"tasks-list\" },\n                  _vm._l(_vm.tasks, function(task) {\n                    return _c(\n                      \"li\",\n                      { key: task.id, staticClass: \"tasks-item\" },\n                      [\n                        task.status !== \"done\"\n                          ? _c(\n                              \"a\",\n                              {\n                                staticClass: \"tasks-item__check\",\n                                attrs: { href: \"#\" },\n                                on: {\n                                  click: function($event) {\n                                    $event.preventDefault()\n                                    $event.stopPropagation()\n                                    _vm.doneTask(task)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"el-icon-circle-check-outline\"\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        task.status === \"done\"\n                          ? _c(\n                              \"span\",\n                              { staticClass: \"tasks-item__check checked\" },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"el-icon-circle-check-outline\"\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _c(\"span\", { staticClass: \"tasks-item__name\" }, [\n                          _vm._v(_vm._s(task.task))\n                        ]),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"tasks-item-delete\",\n                            attrs: { href: \"#\" },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                $event.stopPropagation()\n                                _vm.deleteTask(task)\n                              }\n                            }\n                          },\n                          [_c(\"i\", { staticClass: \"el-icon-delete\" })]\n                        )\n                      ]\n                    )\n                  })\n                )\n              : _vm._e()\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}